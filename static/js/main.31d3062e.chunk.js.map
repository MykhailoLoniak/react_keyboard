{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressed","key","handleKeyUp","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"2NAOaA,EAAb,4MACEC,MAAe,CACbC,SAAS,EACTC,IAAK,IAHT,EAcEC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZH,IAAKE,EAAMF,IACXD,SAAS,KAjBf,uDAME,WACEK,SAASC,iBAAiB,QAASC,KAAKL,eAP5C,kCAUE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,eAX/C,oBAqBE,WACE,MAAyBK,KAAKR,MAAtBE,EAAR,EAAQA,IAAKD,EAAb,EAAaA,QAEb,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIT,EAAD,mCAE+BC,EAF/B,KACG,kCA5Bd,GAAyBS,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,eANmB,CACnBb,SAAS,EACTC,IAAK,MAKLI,SAASS,eAAe,W","file":"static/js/main.31d3062e.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressed: boolean;\n  key: string;\n};\n\nexport class App extends React.Component<State> {\n  state: State = {\n    pressed: false,\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({\n      key: event.key,\n      pressed: true,\n    });\n  };\n\n  render() {\n    const { key, pressed } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!pressed\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${key}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nconst initialState = {\n  pressed: false,\n  key: '',\n};\n\nReactDOM.render(\n  <App {...initialState} />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}